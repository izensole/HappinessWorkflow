georgia_subset<-subset(happy, Country.name=="Georgia")
georgia_subset<-subset(happy, Country.name=="Georgia")
plot_missing(georgia_subset)
georgia_subset<-subset(happy, Country.name=="Georgia")
plot_missing(georgia_subset)
#imputation of the georgia subset:
#imputation for delivery.quality affect
summary(georgia_subset$Delivery.Quality)
georgia_subset$M_Delivery.Quality<-as.factor(ifelse(is.na(georgia_subset$Delivery.Quality), 1, 0))
georgia_subset$Delivery.Quality[is.na(georgia_subset$Delivery.Quality)]<-median(georgia_subset$Delivery.Quality, na.rm=TRUE)
summary(georgia_subset$Delivery.Quality)
#imputation for democratic.quality
#imputation for gini.of.household.income.reported.in.Gallup..by.wp5.year
#imputation for gini.of.household.income.reported.in.Gallup..by.wp5.year
summary(georgia_subset$gini.of.household.income.reported.in.Gallup..by.wp5.year)
georgia_subset$M_gini.of.household.income.reported.in.Gallup..by.wp5.year<-as.factor(ifelse(is.na(georgia_subset$gini.of.household.income.reported.in.Gallup..by.wp5.year), 1, 0))
georgia_subset$gini.of.household.income.reported.in.Gallup..by.wp5.year[is.na(georgia_subset$gini.of.household.income.reported.in.Gallup..by.wp5.year)]<-median(georgia_subset$gini.of.household.income.reported.in.Gallup..by.wp5.year, na.rm=TRUE)
summary(georgia_subset$gini.of.household.income.reported.in.Gallup..by.wp5.year)
plot_missing(georgia_subset)
#imputation for democratic.quality
summary(georgia_subset$Democratic.Quality)
georgia_subset$M_Democratic.Quality<-as.factor(ifelse(is.na(georgia_subset$Democratic.Quality), 1, 0))
georgia_subset$Democratic.Quality[is.na(georgia_subset$Democratic.Quality)]<-median(georgia_subset$Democratic.Quality, na.rm=TRUE)
summary(georgia_subset$Democratic.Quality)
#imputation for democratic.quality
summary(georgia_subset$Democratic.Quality)
georgia_subset$M_Democratic.Quality<-as.factor(ifelse(is.na(georgia_subset$Democratic.Quality), 1, 0))
georgia_subset$Democratic.Quality[is.na(georgia_subset$Democratic.Quality)]<-median(georgia_subset$Democratic.Quality, na.rm=TRUE)
summary(georgia_subset$Democratic.Quality)
plot_missing(georgia_subset)
plot_missing(georgia_subset)
str()
plot_missing(georgia_subset)
#remove the imputated vars
library(dplyr)
georgia_subset <- select(georgia_subset, -M_gini.of.household.income.reported.in.Gallup..by.wp5.year, -M_Democratic.Quality,-M_Delivery.Quality)
georgia.reg<-lm(Life.Ladder~., data = georgia_subset)
georgia.reg<-lm(Life.Ladder~.-year-Country.name, data=georgia_subset)
georgia.reg<-lm(Life.Ladder~.-year, data=georgia_subset)
georgia.reg<-lm(Life.Ladder~., data=georgia_subset)
str(georgia_subset)
#georgia.reg<-lm(Life.Ladder~., data=georgia_subset)
#summary(georgia_subset)
str(georgia_subset$Country.name)
#georgia.reg<-lm(Life.Ladder~., data=georgia_subset)
#summary(georgia_subset)
georgia_subset<-subset(happy, Country.name=="Georgia")
plot_missing(georgia_subset)
summary(georgia_subset$Country.name)
#imputation for delivery.quality affect
summary(georgia_subset$Delivery.Quality)
georgia_subset$M_Delivery.Quality<-as.factor(ifelse(is.na(georgia_subset$Delivery.Quality), 1, 0))
georgia_subset$Delivery.Quality[is.na(georgia_subset$Delivery.Quality)]<-median(georgia_subset$Delivery.Quality, na.rm=TRUE)
summary(georgia_subset$Delivery.Quality)
str(georgia_subset$Country.name)
#georgia.reg<-lm(Life.Ladder~., data=georgia_subset)
#summary(georgia_subset)
str(georgia_subset$Country.name == "Georgia")
#georgia.reg<-lm(Life.Ladder~., data=georgia_subset)
#summary(georgia_subset)
summary(georgia_subset$Country.name == "Georgia")
str(georgia_subset$Country.name == "Georgia")
#georgia.reg<-lm(Life.Ladder~., data=georgia_subset)
#summary(georgia_subset)
str(georgia_subset$Country.name == "Georgia")
georgia.reg<-lm(Life.Ladder~., data=georgia_subset)
str(georgia_subset$Country.name == "Georgia")
georgia.reg<-lm(Life.Ladder~Country.name=="Georgia", data=georgia_subset)
summary(georgia_subset)
#str(georgia_subset$Country.name == "Georgia")
georgia.reg<-lm(Life.Ladder~Country.name=="Georgia", data=georgia_subset)
summary(georgia_subset)
#str(georgia_subset$Country.name == "Georgia")
georgia.reg<-lm(Life.Ladder~Country.name=="Georgia", data=georgia_subset)
summary(georgia.reg)
#str(georgia_subset$Country.name == "Georgia")
georgia.reg<-lm(Life.Ladder~Country.name=="Georgia"+Social.Support, data=georgia_subset)
#str(georgia_subset$Country.name == "Georgia")
georgia.reg<-lm(Life.Ladder~Country.name=="Georgia"+Generosity, data=georgia_subset)
#str(georgia_subset$Country.name == "Georgia")
georgia.reg<-lm(Life.Ladder~Generosity+Country.name=="Georgia", data=georgia_subset)
#str(georgia_subset$Country.name == "Georgia")
georgia.reg<-lm(Life.Ladder~Generosity+Country.name=="Georgia", data=georgia_subset)
#str(georgia_subset$Country.name == "Georgia")
georgia.reg<-lm(Life.Ladder~Country.name=="Georgia", data=georgia_subset)
summary(georgia.reg)
#str(georgia_subset$Country.name == "Georgia")
georgia.reg<-lm(Life.Ladder~Social.Support+Country.name=="Georgia", data=georgia_subset)
#str(georgia_subset$Country.name == "Georgia")
georgia.reg<-lm(Life.Ladder~Country.name=="Georgia", data=georgia_subset)
summary(georgia.reg)
#str(georgia_subset$Country.name == "Georgia")
georgia.reg<-lm(Life.Ladder~Country.name=="Georgia", data=georgia_subset)
summary(georgia.reg)
#str(georgia_subset$Country.name == "Georgia")
georgia.reg<-lm(Life.Ladder~., data=subset(happy, Country.name =="Georgia")))
#str(georgia_subset$Country.name == "Georgia")
georgia.reg<-lm(Life.Ladder~., data=subset(happy, Country.name =="Georgia"))
#str(georgia_subset$Country.name == "Georgia")
georgia.reg<-lm(Life.Ladder~., data=georgia_subset))
#str(georgia_subset$Country.name == "Georgia")
georgia.reg<-lm(Life.Ladder~., data=georgia_subset)
str(georgia_subset$Country.name == "Georgia")
georgia.reg<-lm(Life.Ladder~., data=georgia_subset)
#str(georgia_subset$Country.name == "Georgia")
summary(georgia_subset)
georgia.reg<-lm(Life.Ladder~., data=georgia_subset)
ggplot(data = happy) +
geom_sf(aes(fill = Life.Ladder)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt")
install.packages("sf")
ggplot(data = happy) +
geom_sf(aes(fill = Life.Ladder)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt")
install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel",
"ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata")
ggplot(data = happy) +
install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel",
"ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))
ggplot(data = happy) +
geom_sf(aes(fill = Life.Ladder)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt")
install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel", "ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))
install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel",
"ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))
ggplot(data = happy) +
geom_sf(aes(fill = "Life.Ladder")) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt")
install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel", "ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))
install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel",
"ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))
ggplot(data = happy) +
geom_sf(aes(fill = "lightgreen")) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt")
install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel", "ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))
ggplot(data = happy) +
geom_sf(aes(fill = "lightgreen")) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt")
ggplot(data = happy) +
geom_sf(aes(fill = "lightgreen")) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt")
library("sf")
ggplot(data = happy) +
geom_sf(aes(fill = "lightgreen")) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt")
coefplot(happy.reg, xlab = "Coefficient Confidence Intervals", varnames=NULL, intercept=FALSE)
install.packages("jtools")
install.packages("broom.mixed")
effect_plot(happy, pred = happy.reg, interval = TRUE, plot.points = TRUE)
effect_plot(happy.reg, pred = happy.reg, interval = TRUE, plot.points = TRUE)
summ(happy.reg, scale = TRUE, vifs = TRUE, part.corr = TRUE, confint = TRUE, pvals = FALSE)
introduce(happy)
plot_histogram(happy)
plot_histogram(happy)
library(pacman)
pacman::p_load(dplyr, coefplot, DataExplorer)
introduce(happy)
introduce(happy)
plot_histogram(happy)
knitr::opts_chunk$set(echo = TRUE)
happy<-read.csv("HappyData.csv")
library(pacman)
pacman::p_load(dplyr, coefplot, DataExplorer)
introduce(happy)
happy.reg<-lm(Life.Ladder~Log.GDP.per.capita+Social.support+Healthy.life.expectancy.at.birth+Freedom.to.make.life.choices+Generosity+Perceptions.of.corruption+Positive.affect+Confidence.in.national.government+gini.of.household.income.reported.in.Gallup..by.wp5.year+Positive.affect:Confidence.in.national.government+Generosity:Delivery.Quality+Log.GDP.per.capita:Positive.affect+year-Country.name, data=happy)
summary(happy.reg)
head(happy)
introduce(happy)
head(happy)
tail(happy)
introduce(happy)
knitr::opts_chunk$set(echo = TRUE)
happy<-read.csv("HappyData.csv")
library(pacman)
pacman::p_load(dplyr, coefplot, DataExplorer)
head(happy)
tail(happy)
introduce(happy)
plot_histogram(happy)
plot_missing(happy)
library(dplyr)
happy<-select(happy, -Most.people.can.be.trusted..WVS.round.2010.2014, -GINI.index..World.Bank.estimate., -Most.people.can.be.trusted..WVS.round.2005.2009, -Most.people.can.be.trusted..WVS.round.1994.1998, -Most.people.can.be.trusted..WVS.round.1999.2004, -Most.people.can.be.trusted..WVS.round.1989.1993, -Most.people.can.be.trusted..Gallup, -Most.people.can.be.trusted..WVS.round.1981.1984)
introduce(happy)
#gini.of.household.income.reported.in.Gallup..by.wp5.year
summary(happy$gini.of.household.income.reported.in.Gallup..by.wp5.year)
happy$M_gini.of.household.income.reported.in.Gallup..by.wp5.year<-as.factor(ifelse(is.na(happy$gini.of.household.income.reported.in.Gallup..by.wp5.year), 1, 0))
happy$gini.of.household.income.reported.in.Gallup..by.wp5.year[is.na(happy$gini.of.household.income.reported.in.Gallup..by.wp5.year)]<-median(happy$gini.of.household.income.reported.in.Gallup..by.wp5.year, na.rm=TRUE)
summary(happy$gini.of.household.income.reported.in.Gallup..by.wp5.year)
#Imputation for confidence in national government:
summary(happy$Confidence.in.national.government)
happy$M_confidence.in.national.government<-as.factor(ifelse(is.na(happy$Confidence.in.national.government), 1, 0))
happy$Confidence.in.national.government[is.na(happy$Confidence.in.national.government)]<-median(happy$Confidence.in.national.government, na.rm=TRUE)
summary(happy$Confidence.in.national.government)
#imputation for GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel
summary(happy$GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel)
happy$M_GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel<-as.factor(ifelse(is.na(happy$GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel), 1, 0))
happy$GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel[is.na(happy$GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel)]<-median(happy$GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel, na.rm=TRUE)
summary(happy$GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel)
#imputation for Democratic.Quality
summary(happy$Democratic.Quality)
happy$M_Democratic.Quality<-as.factor(ifelse(is.na(happy$Democratic.Quality), 1, 0))
happy$Democratic.Quality[is.na(happy$Democratic.Quality)]<-median(happy$Democratic.Quality, na.rm=TRUE)
summary(happy$Democratic.Quality)
#imputation for DeliveryQuality
summary(happy$Delivery.Quality)
happy$M_Delivery.Quality<-as.factor(ifelse(is.na(happy$Delivery.Quality), 1, 0))
happy$Delivery.Quality[is.na(happy$Delivery.Quality)]<-median(happy$Delivery.Quality, na.rm=TRUE)
summary(happy$Delivery.Quality)
#imputation for perceptions of corruption:
summary(happy$Perceptions.of.corruption)
happy$M_Perceptions.of.corruption<-as.factor(ifelse(is.na(happy$Perceptions.of.corruption), 1, 0))
happy$Perceptions.of.corruption[is.na(happy$Perceptions.of.corruption)]<-median(happy$Perceptions.of.corruption, na.rm=TRUE)
summary(happy$Perceptions.of.corruption)
#imputation for generosity
summary(happy$Generosity)
happy$M_Generosity<-as.factor(ifelse(is.na(happy$Generosity), 1, 0))
happy$Generosity[is.na(happy$Generosity)]<-median(happy$Generosity, na.rm=TRUE)
summary(happy$Generosity)
#imputation for healthy life expectancy at birth:
summary(happy$Healthy.life.expectancy.at.birth)
happy$M_Healthy.life.expectancy.at.birth<-as.factor(ifelse(is.na(happy$Healthy.life.expectancy.at.birth), 1, 0))
happy$Healthy.life.expectancy.at.birth[is.na(happy$Healthy.life.expectancy.at.birth)]<-median(happy$Healthy.life.expectancy.at.birth, na.rm=TRUE)
summary(happy$Healthy.life.expectancy.at.birth)
#imputation for freedom to make life choices
summary(happy$Freedom.to.make.life.choices)
happy$M_Freedom.to.make.life.choices<-as.factor(ifelse(is.na(happy$Freedom.to.make.life.choices), 1, 0))
happy$Freedom.to.make.life.choices[is.na(happy$Freedom.to.make.life.choices)]<-median(happy$Freedom.to.make.life.choices, na.rm=TRUE)
summary(happy$Freedom.to.make.life.choices)
#imputation for Log.GDP per capita
summary(happy$Log.GDP.per.capita)
happy$M_Log.GDP.per.capita<-as.factor(ifelse(is.na(happy$Log.GDP.per.capita), 1, 0))
happy$Log.GDP.per.capita[is.na(happy$Log.GDP.per.capita)]<-median(happy$Log.GDP.per.capita, na.rm=TRUE)
summary(happy$Log.GDP.per.capita)
#imputation for positive affect
summary(happy$Positive.affect)
happy$M_Positive.affect<-as.factor(ifelse(is.na(happy$Positive.affect), 1, 0))
happy$Positive.affect[is.na(happy$Positive.affect)]<-median(happy$Positive.affect, na.rm=TRUE)
summary(happy$Positive.affect)
#imputation for negative affect:
summary(happy$Negative.affect)
happy$M_Negative.affect<-as.factor(ifelse(is.na(happy$Negative.affect), 1, 0))
happy$Negative.affect[is.na(happy$Negative.affect)]<-median(happy$Negative.affect, na.rm=TRUE)
summary(happy$Negative.affect)
#remove M columns after imputation
happy <- select(happy, -M_Social.support, -M_Negative.affect, -M_Positive.affect, -M_Log.GDP.per.capita, -M_Freedom.to.make.life.choices, -M_Healthy.life.expectancy.at.birth, -M_Generosity, -M_Perceptions.of.corruption, -M_Delivery.Quality, -M_Democratic.Quality, -M_GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel, -M_confidence.in.national.government, -M_gini.of.household.income.reported.in.Gallup..by.wp5.year)
plot_missing(happy)
#remove M columns after imputation
happy <- select(happy, -M_Social.support, -M_Negative.affect, -M_Positive.affect, -M_Log.GDP.per.capita, -M_Freedom.to.make.life.choices, -M_Healthy.life.expectancy.at.birth, -M_Generosity, -M_Perceptions.of.corruption, -M_Delivery.Quality, -M_Democratic.Quality, -M_GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel, -M_confidence.in.national.government, -M_gini.of.household.income.reported.in.Gallup..by.wp5.year)
#imputation for social support
summary(happy$Social.support)
happy$M_Social.support<-as.factor(ifelse(is.na(happy$Social.support), 1, 0))
happy$Social.support[is.na(happy$Social.support)]<-median(happy$Social.support, na.rm=TRUE)
summary(happy$Social.support)
#remove M columns after imputation
happy <- select(happy, -M_Social.support, -M_Negative.affect, -M_Positive.affect, -M_Log.GDP.per.capita, -M_Freedom.to.make.life.choices, -M_Healthy.life.expectancy.at.birth, -M_Generosity, -M_Perceptions.of.corruption, -M_Delivery.Quality, -M_Democratic.Quality, -M_GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel, -M_confidence.in.national.government, -M_gini.of.household.income.reported.in.Gallup..by.wp5.year)
plot_missing(happy)
happy$year <- as.integer(happy$year)
happy_numeric<-unlist(lapply(happy, is.numeric))
happy_numeric2<-happy[, happy_numeric]
M<-cor(happy_numeric2, use = "complete.obs")
library("corrplot")
corrplot(M, type = "upper", tl.pos = "td",
method = "circle", tl.cex = 0.5, tl.col = 'black',
order = "hclust", diag = TRUE)
happy<-select(happy, -Standard.deviation.of.ladder.by.country.year, -Standard.deviation.Mean.of.ladder.by.country.year)
happy<-select(happy, -Standard.deviation.of.ladder.by.country.year, -Standard.deviation.Mean.of.ladder.by.country.year)
happy<-select(happy, -Standard.deviation.of.ladder.by.country.year, -Standard.deviation.Mean.of.ladder.by.country.year)
happy.reg<-lm(Life.Ladder~Log.GDP.per.capita+Social.support+Healthy.life.expectancy.at.birth+Freedom.to.make.life.choices+Generosity+Perceptions.of.corruption+Positive.affect+Confidence.in.national.government+gini.of.household.income.reported.in.Gallup..by.wp5.year+Positive.affect:Confidence.in.national.government+Generosity:Delivery.Quality+Log.GDP.per.capita:Positive.affect+year-Country.name, data=happy)
summary(happy.reg)
confint(happy.reg,level=0.95)
coefplot(happy.reg, xlab = "Coefficient Confidence Intervals", varnames=NULL, intercept=FALSE)
plot(happy.reg$fitted.values,happy.reg$residuals,ylab="Residuals",xlab="Fitted Values",main="Residuals vs. Fitted Values")
abline(0,0)
qqnorm(happy.reg$residuals)
happy<-read.csv("HappyData.csv")
library(pacman)
pacman::p_load(dplyr, coefplot, DataExplorer)
head(happy)
tail(happy)
introduce(happy)
plot_histogram(happy)
plot_missing(happy)
library(dplyr)
happy<-select(happy, -Most.people.can.be.trusted..WVS.round.2010.2014, -GINI.index..World.Bank.estimate., -Most.people.can.be.trusted..WVS.round.2005.2009, -Most.people.can.be.trusted..WVS.round.1994.1998, -Most.people.can.be.trusted..WVS.round.1999.2004, -Most.people.can.be.trusted..WVS.round.1989.1993, -Most.people.can.be.trusted..Gallup, -Most.people.can.be.trusted..WVS.round.1981.1984)
introduce(happy)
#gini.of.household.income.reported.in.Gallup..by.wp5.year
summary(happy$gini.of.household.income.reported.in.Gallup..by.wp5.year)
happy$M_gini.of.household.income.reported.in.Gallup..by.wp5.year<-as.factor(ifelse(is.na(happy$gini.of.household.income.reported.in.Gallup..by.wp5.year), 1, 0))
happy$gini.of.household.income.reported.in.Gallup..by.wp5.year[is.na(happy$gini.of.household.income.reported.in.Gallup..by.wp5.year)]<-median(happy$gini.of.household.income.reported.in.Gallup..by.wp5.year, na.rm=TRUE)
summary(happy$gini.of.household.income.reported.in.Gallup..by.wp5.year)
#Imputation for confidence in national government:
summary(happy$Confidence.in.national.government)
happy$M_confidence.in.national.government<-as.factor(ifelse(is.na(happy$Confidence.in.national.government), 1, 0))
happy$Confidence.in.national.government[is.na(happy$Confidence.in.national.government)]<-median(happy$Confidence.in.national.government, na.rm=TRUE)
summary(happy$Confidence.in.national.government)
#imputation for GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel
summary(happy$GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel)
happy$M_GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel<-as.factor(ifelse(is.na(happy$GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel), 1, 0))
happy$GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel[is.na(happy$GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel)]<-median(happy$GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel, na.rm=TRUE)
summary(happy$GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel)
#imputation for Democratic.Quality
summary(happy$Democratic.Quality)
happy$M_Democratic.Quality<-as.factor(ifelse(is.na(happy$Democratic.Quality), 1, 0))
happy$Democratic.Quality[is.na(happy$Democratic.Quality)]<-median(happy$Democratic.Quality, na.rm=TRUE)
summary(happy$Democratic.Quality)
#imputation for DeliveryQuality
summary(happy$Delivery.Quality)
happy$M_Delivery.Quality<-as.factor(ifelse(is.na(happy$Delivery.Quality), 1, 0))
happy$Delivery.Quality[is.na(happy$Delivery.Quality)]<-median(happy$Delivery.Quality, na.rm=TRUE)
summary(happy$Delivery.Quality)
#imputation for perceptions of corruption:
summary(happy$Perceptions.of.corruption)
happy$M_Perceptions.of.corruption<-as.factor(ifelse(is.na(happy$Perceptions.of.corruption), 1, 0))
happy$Perceptions.of.corruption[is.na(happy$Perceptions.of.corruption)]<-median(happy$Perceptions.of.corruption, na.rm=TRUE)
summary(happy$Perceptions.of.corruption)
#imputation for generosity
summary(happy$Generosity)
happy$M_Generosity<-as.factor(ifelse(is.na(happy$Generosity), 1, 0))
happy$Generosity[is.na(happy$Generosity)]<-median(happy$Generosity, na.rm=TRUE)
summary(happy$Generosity)
#imputation for healthy life expectancy at birth:
summary(happy$Healthy.life.expectancy.at.birth)
happy$M_Healthy.life.expectancy.at.birth<-as.factor(ifelse(is.na(happy$Healthy.life.expectancy.at.birth), 1, 0))
happy$Healthy.life.expectancy.at.birth[is.na(happy$Healthy.life.expectancy.at.birth)]<-median(happy$Healthy.life.expectancy.at.birth, na.rm=TRUE)
summary(happy$Healthy.life.expectancy.at.birth)
#imputation for freedom to make life choices
summary(happy$Freedom.to.make.life.choices)
happy$M_Freedom.to.make.life.choices<-as.factor(ifelse(is.na(happy$Freedom.to.make.life.choices), 1, 0))
happy$Freedom.to.make.life.choices[is.na(happy$Freedom.to.make.life.choices)]<-median(happy$Freedom.to.make.life.choices, na.rm=TRUE)
summary(happy$Freedom.to.make.life.choices)
#imputation for Log.GDP per capita
summary(happy$Log.GDP.per.capita)
happy$M_Log.GDP.per.capita<-as.factor(ifelse(is.na(happy$Log.GDP.per.capita), 1, 0))
happy$Log.GDP.per.capita[is.na(happy$Log.GDP.per.capita)]<-median(happy$Log.GDP.per.capita, na.rm=TRUE)
summary(happy$Log.GDP.per.capita)
#imputation for positive affect
summary(happy$Positive.affect)
happy$M_Positive.affect<-as.factor(ifelse(is.na(happy$Positive.affect), 1, 0))
happy$Positive.affect[is.na(happy$Positive.affect)]<-median(happy$Positive.affect, na.rm=TRUE)
summary(happy$Positive.affect)
#imputation for negative affect:
summary(happy$Negative.affect)
happy$M_Negative.affect<-as.factor(ifelse(is.na(happy$Negative.affect), 1, 0))
happy$Negative.affect[is.na(happy$Negative.affect)]<-median(happy$Negative.affect, na.rm=TRUE)
summary(happy$Negative.affect)
#imputation for social support
summary(happy$Social.support)
happy$M_Social.support<-as.factor(ifelse(is.na(happy$Social.support), 1, 0))
happy$Social.support[is.na(happy$Social.support)]<-median(happy$Social.support, na.rm=TRUE)
summary(happy$Social.support)
#remove M columns after imputation
happy <- select(happy, -M_Social.support, -M_Negative.affect, -M_Positive.affect, -M_Log.GDP.per.capita, -M_Freedom.to.make.life.choices, -M_Healthy.life.expectancy.at.birth, -M_Generosity, -M_Perceptions.of.corruption, -M_Delivery.Quality, -M_Democratic.Quality, -M_GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel, -M_confidence.in.national.government, -M_gini.of.household.income.reported.in.Gallup..by.wp5.year)
#remove M columns after imputation
happy <- select(happy, -M_Social.support, -M_Negative.affect, -M_Positive.affect, -M_Log.GDP.per.capita, -M_Freedom.to.make.life.choices, -M_Healthy.life.expectancy.at.birth, -M_Generosity, -M_Perceptions.of.corruption, -M_Delivery.Quality, -M_Democratic.Quality, -M_GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel, -M_confidence.in.national.government, -M_gini.of.household.income.reported.in.Gallup..by.wp5.year)
#imputation for social support
summary(happy$Social.support)
happy$M_Social.support<-as.factor(ifelse(is.na(happy$Social.support), 1, 0))
happy$Social.support[is.na(happy$Social.support)]<-median(happy$Social.support, na.rm=TRUE)
summary(happy$Social.support)
#remove M columns after imputation
happy <- select(happy, -M_Social.support, -M_Negative.affect, -M_Positive.affect, -M_Log.GDP.per.capita, -M_Freedom.to.make.life.choices, -M_Healthy.life.expectancy.at.birth, -M_Generosity, -M_Perceptions.of.corruption, -M_Delivery.Quality, -M_Democratic.Quality, -M_GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel, -M_confidence.in.national.government, -M_gini.of.household.income.reported.in.Gallup..by.wp5.year)
#imputation for negative affect:
summary(happy$Negative.affect)
happy$M_Negative.affect<-as.factor(ifelse(is.na(happy$Negative.affect), 1, 0))
happy$Negative.affect[is.na(happy$Negative.affect)]<-median(happy$Negative.affect, na.rm=TRUE)
summary(happy$Negative.affect)
#imputation for social support
summary(happy$Social.support)
happy$M_Social.support<-as.factor(ifelse(is.na(happy$Social.support), 1, 0))
happy$Social.support[is.na(happy$Social.support)]<-median(happy$Social.support, na.rm=TRUE)
summary(happy$Social.support)
#remove M columns after imputation
happy <- select(happy, -M_Social.support, -M_Negative.affect, -M_Positive.affect, -M_Log.GDP.per.capita, -M_Freedom.to.make.life.choices, -M_Healthy.life.expectancy.at.birth, -M_Generosity, -M_Perceptions.of.corruption, -M_Delivery.Quality, -M_Democratic.Quality, -M_GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel, -M_confidence.in.national.government, -M_gini.of.household.income.reported.in.Gallup..by.wp5.year)
plot_missing(happy)
happy$year <- as.integer(happy$year)
happy_numeric<-unlist(lapply(happy, is.numeric))
happy_numeric2<-happy[, happy_numeric]
M<-cor(happy_numeric2, use = "complete.obs")
library("corrplot")
corrplot(M, type = "upper", tl.pos = "td",
method = "circle", tl.cex = 0.5, tl.col = 'black',
order = "hclust", diag = TRUE)
happy<-select(happy, -Standard.deviation.of.ladder.by.country.year, -Standard.deviation.Mean.of.ladder.by.country.year)
happy.reg<-lm(Life.Ladder~Log.GDP.per.capita+Social.support+Healthy.life.expectancy.at.birth+Freedom.to.make.life.choices+Generosity+Perceptions.of.corruption+Positive.affect+Confidence.in.national.government+gini.of.household.income.reported.in.Gallup..by.wp5.year+Positive.affect:Confidence.in.national.government+Generosity:Delivery.Quality+Log.GDP.per.capita:Positive.affect+year-Country.name, data=happy)
summary(happy.reg)
confint(happy.reg,level=0.95)
coefplot(happy.reg, xlab = "Coefficient Confidence Intervals", varnames=NULL, intercept=FALSE)
plot(happy.reg$fitted.values,happy.reg$residuals,ylab="Residuals",xlab="Fitted Values",main="Residuals vs. Fitted Values")
abline(0,0)
qqnorm(happy.reg$residuals)
#remove M columns after imputation
happy <- select(happy, -M_Social.support, -M_Negative.affect, -M_Positive.affect, -M_Log.GDP.per.capita, -M_Freedom.to.make.life.choices, -M_Healthy.life.expectancy.at.birth, -M_Generosity, -M_Perceptions.of.corruption, -M_Delivery.Quality, -M_Democratic.Quality, -M_GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel, -M_confidence.in.national.government, -M_gini.of.household.income.reported.in.Gallup..by.wp5.year)
knitr::opts_chunk$set(echo = TRUE)
happy<-read.csv("HappyData.csv")
library(pacman)
pacman::p_load(dplyr, coefplot, DataExplorer)
head(happy)
tail(happy)
introduce(happy)
plot_histogram(happy)
plot_missing(happy)
library(dplyr)
happy<-select(happy, -Most.people.can.be.trusted..WVS.round.2010.2014, -GINI.index..World.Bank.estimate., -Most.people.can.be.trusted..WVS.round.2005.2009, -Most.people.can.be.trusted..WVS.round.1994.1998, -Most.people.can.be.trusted..WVS.round.1999.2004, -Most.people.can.be.trusted..WVS.round.1989.1993, -Most.people.can.be.trusted..Gallup, -Most.people.can.be.trusted..WVS.round.1981.1984)
introduce(happy)
#gini.of.household.income.reported.in.Gallup..by.wp5.year
summary(happy$gini.of.household.income.reported.in.Gallup..by.wp5.year)
happy$M_gini.of.household.income.reported.in.Gallup..by.wp5.year<-as.factor(ifelse(is.na(happy$gini.of.household.income.reported.in.Gallup..by.wp5.year), 1, 0))
happy$gini.of.household.income.reported.in.Gallup..by.wp5.year[is.na(happy$gini.of.household.income.reported.in.Gallup..by.wp5.year)]<-median(happy$gini.of.household.income.reported.in.Gallup..by.wp5.year, na.rm=TRUE)
summary(happy$gini.of.household.income.reported.in.Gallup..by.wp5.year)
#Imputation for confidence in national government:
summary(happy$Confidence.in.national.government)
happy$M_confidence.in.national.government<-as.factor(ifelse(is.na(happy$Confidence.in.national.government), 1, 0))
happy$Confidence.in.national.government[is.na(happy$Confidence.in.national.government)]<-median(happy$Confidence.in.national.government, na.rm=TRUE)
summary(happy$Confidence.in.national.government)
#imputation for GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel
summary(happy$GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel)
happy$M_GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel<-as.factor(ifelse(is.na(happy$GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel), 1, 0))
happy$GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel[is.na(happy$GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel)]<-median(happy$GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel, na.rm=TRUE)
summary(happy$GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel)
#imputation for Democratic.Quality
summary(happy$Democratic.Quality)
happy$M_Democratic.Quality<-as.factor(ifelse(is.na(happy$Democratic.Quality), 1, 0))
happy$Democratic.Quality[is.na(happy$Democratic.Quality)]<-median(happy$Democratic.Quality, na.rm=TRUE)
summary(happy$Democratic.Quality)
#imputation for DeliveryQuality
summary(happy$Delivery.Quality)
happy$M_Delivery.Quality<-as.factor(ifelse(is.na(happy$Delivery.Quality), 1, 0))
happy$Delivery.Quality[is.na(happy$Delivery.Quality)]<-median(happy$Delivery.Quality, na.rm=TRUE)
summary(happy$Delivery.Quality)
#imputation for perceptions of corruption:
summary(happy$Perceptions.of.corruption)
happy$M_Perceptions.of.corruption<-as.factor(ifelse(is.na(happy$Perceptions.of.corruption), 1, 0))
happy$Perceptions.of.corruption[is.na(happy$Perceptions.of.corruption)]<-median(happy$Perceptions.of.corruption, na.rm=TRUE)
summary(happy$Perceptions.of.corruption)
#imputation for generosity
summary(happy$Generosity)
happy$M_Generosity<-as.factor(ifelse(is.na(happy$Generosity), 1, 0))
happy$Generosity[is.na(happy$Generosity)]<-median(happy$Generosity, na.rm=TRUE)
summary(happy$Generosity)
#imputation for healthy life expectancy at birth:
summary(happy$Healthy.life.expectancy.at.birth)
happy$M_Healthy.life.expectancy.at.birth<-as.factor(ifelse(is.na(happy$Healthy.life.expectancy.at.birth), 1, 0))
happy$Healthy.life.expectancy.at.birth[is.na(happy$Healthy.life.expectancy.at.birth)]<-median(happy$Healthy.life.expectancy.at.birth, na.rm=TRUE)
summary(happy$Healthy.life.expectancy.at.birth)
#imputation for freedom to make life choices
summary(happy$Freedom.to.make.life.choices)
happy$M_Freedom.to.make.life.choices<-as.factor(ifelse(is.na(happy$Freedom.to.make.life.choices), 1, 0))
happy$Freedom.to.make.life.choices[is.na(happy$Freedom.to.make.life.choices)]<-median(happy$Freedom.to.make.life.choices, na.rm=TRUE)
summary(happy$Freedom.to.make.life.choices)
#imputation for Log.GDP per capita
summary(happy$Log.GDP.per.capita)
happy$M_Log.GDP.per.capita<-as.factor(ifelse(is.na(happy$Log.GDP.per.capita), 1, 0))
happy$Log.GDP.per.capita[is.na(happy$Log.GDP.per.capita)]<-median(happy$Log.GDP.per.capita, na.rm=TRUE)
summary(happy$Log.GDP.per.capita)
#imputation for positive affect
summary(happy$Positive.affect)
happy$M_Positive.affect<-as.factor(ifelse(is.na(happy$Positive.affect), 1, 0))
happy$Positive.affect[is.na(happy$Positive.affect)]<-median(happy$Positive.affect, na.rm=TRUE)
summary(happy$Positive.affect)
#imputation for negative affect:
summary(happy$Negative.affect)
happy$M_Negative.affect<-as.factor(ifelse(is.na(happy$Negative.affect), 1, 0))
happy$Negative.affect[is.na(happy$Negative.affect)]<-median(happy$Negative.affect, na.rm=TRUE)
summary(happy$Negative.affect)
#imputation for social support
summary(happy$Social.support)
happy$M_Social.support<-as.factor(ifelse(is.na(happy$Social.support), 1, 0))
happy$Social.support[is.na(happy$Social.support)]<-median(happy$Social.support, na.rm=TRUE)
summary(happy$Social.support)
#remove M columns after imputation
happy <- select(happy, -M_Social.support, -M_Negative.affect, -M_Positive.affect, -M_Log.GDP.per.capita, -M_Freedom.to.make.life.choices, -M_Healthy.life.expectancy.at.birth, -M_Generosity, -M_Perceptions.of.corruption, -M_Delivery.Quality, -M_Democratic.Quality, -M_GINI.index..World.Bank.estimate...average.2000.2017..unbalanced.panel, -M_confidence.in.national.government, -M_gini.of.household.income.reported.in.Gallup..by.wp5.year)
plot_missing(happy)
happy$year <- as.integer(happy$year)
happy_numeric<-unlist(lapply(happy, is.numeric))
happy_numeric2<-happy[, happy_numeric]
M<-cor(happy_numeric2, use = "complete.obs")
library("corrplot")
corrplot(M, type = "upper", tl.pos = "td",
method = "circle", tl.cex = 0.5, tl.col = 'black',
order = "hclust", diag = TRUE)
happy<-select(happy, -Standard.deviation.of.ladder.by.country.year, -Standard.deviation.Mean.of.ladder.by.country.year)
happy.reg<-lm(Life.Ladder~Log.GDP.per.capita+Social.support+Healthy.life.expectancy.at.birth+Freedom.to.make.life.choices+Generosity+Perceptions.of.corruption+Positive.affect+Confidence.in.national.government+gini.of.household.income.reported.in.Gallup..by.wp5.year+Positive.affect:Confidence.in.national.government+Generosity:Delivery.Quality+Log.GDP.per.capita:Positive.affect+year-Country.name, data=happy)
summary(happy.reg)
confint(happy.reg,level=0.95)
coefplot(happy.reg, xlab = "Coefficient Confidence Intervals", varnames=NULL, intercept=FALSE)
plot(happy.reg$fitted.values,happy.reg$residuals,ylab="Residuals",xlab="Fitted Values",main="Residuals vs. Fitted Values")
abline(0,0)
qqnorm(happy.reg$residuals)
summary(happy$year)
head(happy)[,1]
tail(happy)
head(happy)[1,1]
tail(happy)
head(happy)[,1:26]
head(happy)[1:26]
head(happy)[1:20]
head(happy)
tail(happy)
head(happy)
tail(happy)
head(happy[1,6])
tail(happy)
head(happy)[1,5]
tail(happy)
head(happy)[1:5]
tail(happy)
head(happy)[1:5]
tail(happy)[1:5]
knitr::opts_chunk$set(echo = TRUE)
happy<-read.csv("HappyData.csv")
happy.reg<-lm(Life.Ladder~Log.GDP.per.capita+Social.support+Healthy.life.expectancy.at.birth+Freedom.to.make.life.choices+Generosity+Perceptions.of.corruption+Positive.affect+Confidence.in.national.government+gini.of.household.income.reported.in.Gallup..by.wp5.year+Positive.affect:Confidence.in.national.government+Generosity:Delivery.Quality+Log.GDP.per.capita:Positive.affect+year-Country.name, data=happy)
summary(happy.reg)
